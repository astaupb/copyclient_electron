#!/usr/bin/env bash
################# "astaprint" CUPS backend script ##############################
#
# /usr/lib/cups/backend/astaprint
#
# (c) September 2007  Kurt Pfeifle <pfeifle@kde.org>
#                                  <kurt.pfeifle@infotec.com>
#     Network printing consultant Linux/Unix/Windows/Samba/CUPS
#
# (c) December 2018-2019  Michael Koch <m.koch@emkay443.de>
#                                      <mkoch@asta.upb.de>
#
# License: GNU GPLv2 or GPLv3 (your choice)
# Warranty: None at all; you may need to fix included defects on your own.

backend=${0}
jobid=${1}
cupsuser=${2}
jobtitle=${3}
jobcopies=${4}
joboptions=${5}
jobfile=${6}

# sanitize job title (only allow alphanumeric characters and a bit of punctuation)
# also remove .pdf from file name as it's added later on
sanitized_jobtitle="$(echo ${jobtitle} | tr -cd 'A-Za-zäöüÄÖÜß0-9 .()_-' | cut -c 1-80)"
sanitized_jobtitle="${sanitized_jobtitle%.pdf}"
outname=${sanitized_jobtitle}

# now do the real work:
if [ "${#}" -eq 0 ]; then
	echo "file astaprint \"AStA Copyclient Fakeprinter\" \"AStA Copyclient Fakeprinter for UNIX-like operating systems\""
	exit 0
elif [ "${#}" -eq 5 ]; then
	tmpfile=$(mktemp)
	cat - > $tmpfile
elif [ "${#}" -eq 6 ]; then
	tmpfile=$(mktemp)
	cat $jobfile > $tmpfile
else
	echo " "
	echo " Usage: astaprint job-id user title copies options [file]"
	echo " "
	echo " Also accepts data from stdin instead of a file"
	echo " "
	echo " (Install as CUPS backend in /usr/lib/cups/backend/astaprint)"
	echo " (Use as 'device URI' like \"astaprint:/path/to/writeable/directory\" for printer installation.)"
	exit 0
fi

if [ "${#}" -eq 5 ] || [ "${#}" -eq 6 ]; then
	uuid=$(uuidgen)

	if [ ! -e ${DEVICE_URI#astaprint:} ]; then
		mkdir -p ${DEVICE_URI#astaprint:}
		chmod 777 ${DEVICE_URI#astaprint:}
	fi

	outpdf=${DEVICE_URI#astaprint:}/${uuid}.pdf

	# remove PJL shit
	if [[ $(head -n 3 $tmpfile) == *"@PJL"* ]]; then
		cat $tmpfile | sed -n '/^%PDF-/,$p' | sed -n '1,/^%%EOF/p' > "$outpdf"
	else
		mv $tmpfile "$outpdf"
	fi

	# detect job options
	if [[ -d "${DEVICE_URI#astaprint:}" ]]; then
		color=true
		a3=false
		duplex=0
		optionsfile="${outpdf}.options"

		if [[ "$joboptions" == *"ColorModel=Gray"* ]]; then
			color=false
		fi
		if [[ "$joboptions" == *"PageSize=A3"* ]]; then
			a3=true
		fi
		if [[ "$joboptions" == *"Duplex=DuplexNoTumble"* ]]; then
			duplex=1
		elif [[ "$joboptions" == *"Duplex=DuplexTumble"* ]]; then
			duplex=2
		fi

		echo "{\"filename\": \"${outname}.pdf\",\"a3\": ${a3},\"color\": ${color},\"duplex\": ${duplex}, \"copies\": ${jobcopies}}" > "$optionsfile"

		chmod 777 "$optionsfile"
		chown ${cupsuser} "$optionsfile"
	fi

	# remove tmp file
	rm $tmpfile

	# Make sure everyone can read and delete it
	chmod 777 "$outpdf"
	chown ${cupsuser} "$outpdf"

	# Open CC if not already opened, otherwise show window
	if [ -f "/opt/AStA Copyclient/asta-copyclient" ]; then
		nohup sudo -u ${cupsuser} DISPLAY=:0 XDG_RUNTIME_DIR=/run/user/$(id -u ${cupsuser}) "/opt/AStA Copyclient/asta-copyclient" &>/dev/null &
	fi
fi

# remove residual files older than 5 minutes
find "${DEVICE_URI#astaprint:}" -type f -mmin +5 -delete

echo 1>&2

################# end "astaprint" ##############################################