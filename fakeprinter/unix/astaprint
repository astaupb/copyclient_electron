#!/bin/bash
################# "astaprint" CUPS backend script ##############################
#
# /usr/lib/cups/backend/astaprint
#
# (c) September 2007  Kurt Pfeifle <pfeifle@kde.org>
#                                  <kurt.pfeifle@infotec.com>
#     Network printing consultant Linux/Unix/Windows/Samba/CUPS
#
# License: GNU GPLv2 or GPLv3 (your choice)
# Warranty: None at all; you may need to fix included defects on your own.
#

backend=${0}
jobid=${1}
cupsuser=${2}
jobtitle=${3}
jobcopies=${4}
joboptions=${5}
jobfile=${6}
printtime=$(date +%Y-%b-%d-%H-%M-%S)

# we are free to compose the output filename written by the astaprint backend
# in whatever way we like... However, we must be careful when using the
# $jobtitle part -- the job may originate from a web browser and contain
# slashes and all kinds of illegal or problematic characters. Therefore
# we prefer to radically convert every "weird" character to an underscore
# for our current purpose...

sanitized_jobtitle="$(echo ${jobtitle} | tr [:/%\&=+?\\\\#\'\`\´\*] _)"

# the following lines would do (nearly) the same as the above, but slower
# -- yet better readable (and the above may be in need of some fixing still):
#sanitized_jobtitle="$(echo ${jobtitle} \
#                |tr [:blank:] _ \
#                |tr : _ \
#                |tr \"\ \" _ \
#                |tr / _ \
#                |tr % _ \
#                |tr \' _ \
#                |tr \` _ \
#                |tr \´ _ \
#                |tr \' _ \
#                |tr \& _ \
#                |tr \* _ \
#                |tr \# _ \
#                |tr = _ \
#                |tr + _ \
#                |tr ? _ \
#                |tr \\\\ _ )"
##               # last line to get rid of "backslashes"...

# now for our final job output name:
outname=${sanitized_jobtitle}
# we include the $printtime part to have a uniq name in case the same job
# is tested with different settings to be kept for comparing. It is also
# useful for aligning debug efforts to CUPS' error_log entries.


# we will read the output directory from the printers $DEVICE_URI environment
# variable that should look s.th. like "astaprint:/path/to/a/directory" and write
# our printfile as $outname there....

# Now do the real work:
case ${#} in
	0)
		# this case is for "backend discovery mode"
		echo "file astaprint \"AStA Copyclient Fakeprinter\" \"AStA Copyclient Fakeprinter for UNIX-like operating systems\""
		exit 0
		;;
	5)
		tmpfile="$(mktemp)"
		cat - > $tmpfile
		;;&
	6)
		tmpfile="$(mktemp)"
		cat ${6} > $tmpfile
		;;&
	5|6)
		if [ ! -e ${DEVICE_URI#astaprintgtk:} ]; then
			mkdir -p ${DEVICE_URI#astaprintgtk:}
			chmod 777 ${DEVICE_URI#astaprintgtk:}
		fi

		outpdf=${DEVICE_URI#astaprintgtk:}/${outname}.pdf

		# remove PJL shit
		if [[ $(head -n 3 $tmpfile) == *"@PJL"* ]]; then
			cat $tmpfile | sed -n '/^%PDF-/,$p' | sed -n '1,/^%%EOF/p' > "$outpdf"
		else
			mv $tmpfile "$outpdf"
		fi

		# urlencode dat sheeet
		outnameurlsafe=$(echo "$outname" | perl -MURI::Escape -ne 'chomp;print uri_escape($_),"\n"')

		# remove tmp file
		rm $tmpfile

		# Make sure everyone can read it
		chmod 777 "$outpdf"

		# Cleanup
		rm "$outpdf"

		# WARNING! WARNING! WARNING! Don't use these file permissions
		# on a production print server! This is for development convenience
		# only! WARNING, security risk!
		;;
	1|2|3|4|*)
		# these cases are unsupported
		echo " "
		echo " Usage: astaprint job-id user title copies options [file]"
		echo " "
		echo " (Install as CUPS backend in /usr/lib/cups/backend/astaprint)"
		echo " (Use as 'device URI' like \"astaprint:/path/to/writeable/directory\" for printer installation.)"
		exit 0
esac

echo 1>&2

################# end "astaprint" ##############################################
